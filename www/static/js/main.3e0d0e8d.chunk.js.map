{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/addons/NavLinks.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/Side/Side.js","components/Pages/Main/Main.js","components/Pages/Addd/Addd.js","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","className","onClick","click","NavLinks","to","toolbar","drawerClickHandler","href","undefined","sideDrawer","drawerClasses","show","push","join","closeSideDrawerFunction","backdrop","Side","styles","root","color","label","fontSize","paddingTop","fontStyle","btnRoot","backgroundColor","marginBottom","padding","width","fontWeight","balanceBox","margin","btnsBox","marginTop","display","Main","textAlign","withStyles","classes","Box","clone","pt","pr","pb","pl","Paper","elevation","Grid","container","spacing","alignItems","wrap","item","bgcolor","Avatar","Typography","justify","Button","variant","Addd","App","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","this","testtText","testText","class","path","exact","component","Component","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e0d0e8d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './DrawerToggleButton.css';\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button-line\"></div>\r\n        <div className=\"toggle-button-line\"></div>\r\n        <div className=\"toggle-button-line\"></div>\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavLinks(props) {\r\n    return(\r\n        <ul>\r\n            <li><Link to=\"/\"         onClick={props.click}> Home               </Link></li>\r\n            <li><Link to=\"/addd\"     onClick={props.click}> Add Income/Expense </Link></li>\r\n            <li><Link to=\"/expense\"  onClick={props.click}> History            </Link></li>\r\n            <li><Link to=\"/pancakes\" onClick={props.click}> List               </Link></li>\r\n            <li><Link to=\"/details\"  onClick={props.click}> Details            </Link></li>\r\n            <li><Link to=\"/settings\" onClick={props.click}> Settings           </Link></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport NavLinks from '../addons/NavLinks';\r\n\r\nconst toolbar = props => (\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar-nav\">\r\n            <div className=\"toolbar-tgl-btn\">\r\n                <DrawerToggleButton click = {props.drawerClickHandler}/>\r\n            </div>\r\n            <div className=\"toolbar-logo\"><a href=\"/\">Meh Logo</a></div>\r\n            <div className=\"spacer\"></div>\r\n            <div className=\"toolbar-nav-items\">\r\n                <NavLinks click={undefined}/>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport './SideDrawer.css';\r\nimport NavLinks from '../addons/NavLinks';\r\n\r\nconst sideDrawer = props => { \r\n    let drawerClasses = ['side-drawer'];\r\n\r\n    if (props.show) {\r\n        drawerClasses.push('open');\r\n    }\r\n\r\n    return (\r\n        <nav className={drawerClasses.join(' ')}>\r\n            <NavLinks click={props.closeSideDrawerFunction}/>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click}/>\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './Side.css';\r\n\r\nconst Side = props => {\r\n    return(\r\n        <div className=\"side\"></div>\r\n    );\r\n}\r\n\r\nexport default Side;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Side from '../../Side/Side';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccountBalanceWalletRoundedIcon from '@material-ui/icons/AccountBalanceWalletRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport './Main.css';\r\n\r\nconst styles = {\r\n    root: {\r\n        color: \"#ff0000\",\r\n        \"&:hover\": {\r\n            color: \"#0000ff\"\r\n        }\r\n    },\r\n    label: {\r\n            color: 'purple',\r\n            fontSize: 30\r\n    },\r\n    paddingTop: {\r\n        paddingTop: '30px',\r\n        fontStyle: 'italic',\r\n        fontSize: 12\r\n    },\r\n    btnRoot: {\r\n        backgroundColor: 'indigo',\r\n        color: 'whitesmoke',\r\n        '&:hover': {\r\n            backgroundColor: 'lemonchiffon',\r\n            color: 'purple'\r\n        },\r\n        '&:active': {\r\n        backgroundColor: 'lemonchiffon',\r\n        color: 'purple'\r\n        },\r\n        marginBottom: '24px',\r\n        padding: '16px',\r\n        width: 200,\r\n        fontWeight: 'bold'\r\n    },\r\n    balanceBox: {\r\n        ['@media (max-width:768px)'] : {\r\n            margin: '0 auto'\r\n        }\r\n    },\r\n    btnsBox: {\r\n        marginTop: '64px',\r\n        display: 'inline-block',\r\n        ['@media (max-width:768px)'] : {\r\n            margin: 'auto',\r\n            marginTop: '64px'\r\n        }\r\n    },\r\n    Main: {\r\n        ['@media (max-width:768px)'] : {\r\n            textAlign: 'center'\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const { classes } = props;\r\n\r\n    return(\r\n        <div className={classes.Main}>\r\n            <Box clone pt={2} pr={1} pb={1} pl={2} width={300}\r\n                    className={classes.balanceBox}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={2} alignItems=\"center\" wrap=\"nowrap\">\r\n                        <Grid item>\r\n                            <Box bgcolor=\"primary.main\" clone>\r\n                            <Avatar>\r\n                                <AccountBalanceWalletRoundedIcon />\r\n                            </Avatar>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>Balance</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\" wrap=\"nowrap\">\r\n                        <Grid item>\r\n                            <Typography className={classes.paddingTop}>\r\n                                (this month)\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"flex-start\" spacing={1}>\r\n                    <Grid item>\r\n                        <Box pb={2}>\r\n                            <Button color=\"primary\"\r\n                                    classes={{\r\n                                    root: classes.root, \r\n                                    label: classes.label\r\n                                    }}>\r\n                                $746.56</Button>\r\n                        </Box>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Box>\r\n\r\n            <div className={classes.btnsBox}>\r\n                <div>\r\n                    <Button variant=\"contained\" className={classes.btnRoot}>\r\n                        Add New\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" className={classes.btnRoot}>\r\n                        History\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"contained\" className={classes.btnRoot}>\r\n                        Savings\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Side />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Main);","import React, { Component } from 'react';\r\nimport './Addd.css';\r\n\r\nfunction Addd(props){\r\n\r\n    return (\r\n      <div>\r\n        <h2>HELLO</h2>\r\n        <p>Cras facilisis urna ornare ex volutpat, et\r\n        convallis erat elementum. Ut aliquam, ipsum vitae\r\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\r\n        metus nec massa. Maecenas hendrerit laoreet augue\r\n        nec molestie. Cum sociis natoque penatibus et magnis\r\n        dis parturient montes, nascetur ridiculus mus.</p>\r\n  \r\n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Addd;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop'\nimport sideDrawer from './components/SideDrawer/SideDrawer';\nimport Side from './components/Side/Side';\nimport Main from './components/Pages/Main/Main';\nimport Addd from \"./components/Pages/Addd/Addd\";\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen : false});\n  };\n\n\n  render() {\n    let backdrop;\n\n    if(this.state.sideDrawerOpen){\n      backdrop = <Backdrop click = {this.backdropClickHandler} />;\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Toolbar drawerClickHandler = {this.drawerToggleClickHandler}\n                  testtText = {this.state.testText} />\n          <SideDrawer show={this.state.sideDrawerOpen}\n                      closeSideDrawerFunction={this.backdropClickHandler}/>\n          {backdrop}\n            <div class=\"content\">\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/addd\" exact component={Addd}/>\n        </Switch>\n      </div>\n    \n\n            </div>\n          </div>\n          </Router>\n    );\n  }\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}